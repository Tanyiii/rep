import java.util.*;

class HeapChecker {
    private List<Integer> heap;

    public HeapChecker(List<Integer> heap) {
        this.heap = heap;
    }

    // Проверка, является ли массив минимальной кучей
    public boolean isMinHeap() {
        // Проходим по всем родительским узлам
        for (int i = 0; i <= heap.size() / 2 - 1; i++) {
            int leftChild = 2 * i + 1;
            int rightChild = 2 * i + 2;

            // Проверяем левого потомка
            if (leftChild < heap.size() && heap.get(i) > heap.get(leftChild))
                return false;

            // Проверяем правого потомка
            if (rightChild < heap.size() && heap.get(i) > heap.get(rightChild))
                return false;
        }
        return true;
    }

    // Поиск элемента в куче
    public boolean contains(int value) {
        return containsRecursive(0, value); // Начинаем поиск с корня
    }

    // Рекурсивный поиск элемента
    private boolean containsRecursive(int index, int value) {
        // Если вышли за границы или текущий элемент больше искомого (в мин-куче)
        if (index >= heap.size() || heap.get(index) > value)
            return false;

        // Если нашли элемент
        if (heap.get(index) == value)
            return true;

        // Рекурсивно ищем в левом и правом поддеревьях
        return containsRecursive(2 * index + 1, value) || 
               containsRecursive(2 * index + 2, value);
    }

    // Вывод структуры кучи
    public void printHeap() {
        System.out.println("Куча: " + heap);
        System.out.println("Является минимальной кучей: " + isMinHeap());
    }
}

public class Main2 {
    public static void main(String[] args) {
        // Создаем минимальную кучу
        List<Integer> minHeap = Arrays.asList(2, 5, 3, 7, 6, 8, 4);
        
        HeapChecker checker = new HeapChecker(minHeap);
        
        checker.printHeap(); // Проверяем и выводим
        
        // Поиск элементов
        System.out.println("Содержит 5: " + checker.contains(5)); // true
        System.out.println("Содержит 10: " + checker.contains(10)); // false
        
        // Проверка НЕ минимальной кучи
        List<Integer> notHeap = Arrays.asList(10, 5, 15, 3, 8);
        HeapChecker checker2 = new HeapChecker(notHeap);
        checker2.printHeap(); // Должен показать false
    }
}
